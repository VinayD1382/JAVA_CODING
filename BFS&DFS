import java.util.*;
class Graph{
    int size;
    int[][] matrix;
    char[] vertexdata;
    Graph(int size){
        this.size = size;
        this.matrix = new int[size][size];
        this.vertexdata = new char[size];
    }
    public void addvertex(int index,char val){
        if(index>=0 && index<size){
            vertexdata[index] = val;
        }
    }
    public void addedge(int u,int v){
        if(u>=0 && u<size && v>=0 && v<size){
            matrix[u][v] = 1;
            matrix[v][u] = 1;
        }
    }
    public void display(){
        for(int i=0;i<size;i++){
            for(int j=0;j<size;j++){
                System.out.print(matrix[i][j]);
            }
            System.out.println();
        }
        for(int i=0;i<size;i++){
            System.out.println("The value of index " + i + " have " + vertexdata[i]);
        }
    }
    
    public void BFS(int in){
        boolean[] visited = new boolean[size];
        Queue<Integer> obj = new LinkedList<>();
        visited[in] = true;
        obj.offer(in);
        
        while(!obj.isEmpty()){
            int cur = obj.poll();
          
            System.out.print(vertexdata[cur] + " ");
            
            for(int i=0;i<size;i++){
                if(matrix[cur][i] == 1 && !visited[i]){
                    visited[i] = true;
                    obj.offer(i);
                }
            }
        }
        
    }
    public void DFS(int ind){
        boolean[] visited = new boolean[size];
        dfs(ind,visited);
    }
    public void dfs(int ind,boolean[] visited){
        visited[ind] = true;
        System.out.print(vertexdata[ind] + " ");
        for(int i=0;i<size;i++){
            if(matrix[ind][i] == 1 && !visited[i]){
                dfs(i,visited);
            }
        }
    }
    public static void main(String[] args){
        Graph obj = new Graph(5);
        obj.addvertex(0,'A');
        obj.addvertex(1,'B');
        obj.addvertex(2,'C');
        obj.addvertex(3,'D');
        obj.addvertex(4,'E');
        obj.addedge(0,2);
        obj.addedge(3,2);
        obj.addedge(2,4);
        obj.addedge(1,3);
        obj.display();
        obj.DFS(0);
        System.out.println();
        obj.BFS(0);
    }
}
